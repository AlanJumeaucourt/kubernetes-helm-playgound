name: Deploy New Version

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy (e.g., 1.0.5)'
        required: true
        default: ''
      changelog:
        description: 'Changelog message'
        required: false
        default: ''

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Set version from tag or input
        id: set_version
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION=${{ github.event.inputs.version }}
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
      - name: Update version
        run: |
          CHANGELOG_MSG="${{ github.event.inputs.changelog }}"
          if [[ -z "$CHANGELOG_MSG" && "${{ github.event_name }}" == "push" ]]; then
            CHANGELOG_MSG="Release version ${{ env.VERSION }}"
          fi
          
          cd k8s-helm-todo
          ./update-version.sh ${{ env.VERSION }} "$CHANGELOG_MSG"
          
      - name: Build and push Docker images
        run: |
          cd k8s-helm-todo
          
          # Build Docker images
          docker build -t todo-app:${{ env.VERSION }} ./backend
          docker build -t todo-frontend:${{ env.VERSION }} ./frontend
          
          # Save images to tar files for release artifacts
          docker save todo-app:${{ env.VERSION }} | gzip > todo-app-${{ env.VERSION }}.tar.gz
          docker save todo-frontend:${{ env.VERSION }} | gzip > todo-frontend-${{ env.VERSION }}.tar.gz
          
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          draft: false
          prerelease: false
          files: |
            k8s-helm-todo/todo-app-${{ env.VERSION }}.tar.gz
            k8s-helm-todo/todo-frontend-${{ env.VERSION }}.tar.gz
            k8s-helm-todo/charts/todo-app/Chart.yaml
            k8s-helm-todo/charts/todo-app/values.yaml
          
      - name: Instructions for deployment
        run: |
          echo "::notice::Version ${{ env.VERSION }} has been released."
          echo "::notice::To deploy to your cluster, download the Docker images and run:"
          echo "::notice::k3d image import todo-app:${{ env.VERSION }} todo-frontend:${{ env.VERSION }} -c mycluster"
          echo "::notice::helm upgrade todo-app k8s-helm-todo/charts/todo-app" 